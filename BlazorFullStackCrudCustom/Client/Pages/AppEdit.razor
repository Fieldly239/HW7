@page "/apps"
@page "/apps/{id:int}"
@inject IFeedBackService FeedBackService
@if (Id == null)
{
    <PageTitle>Create a new Appilcation</PageTitle>
    <h3>Create a new Appilcation</h3>
}
else
{
    <PageTitle>Edit @app.Name</PageTitle>
    <h3>Edit @app.Name</h3>
}
<EditForm Model="app" OnSubmit="HandleSubmit">
    
    <div>
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="app.Name" class="form-control"></InputText>
    </div>
    <div>
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="app.Description" class="form-control"></InputText>
    </div>
    
    
    <br />
    <button typeof="submit" class="btn btn-primary">@btnText</button>
    <button typeof="button" class="btn btn-danger" @onclick="DeleteAppilcation">Delete Appilcation</button>
    
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    string btnText = string.Empty;
    Appilcation app = new Appilcation();

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Appilcation" : "Update Appilcation";
        
        await FeedBackService.GetAppilcations();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            
        }
        else
        {
            app = await FeedBackService.GetSingleApps((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await FeedBackService.CreateApps(app);
        }
        else
        {
            await FeedBackService.UpdateApps(app);
        }
    }

    async Task DeleteAppilcation()
    {
        await FeedBackService.DeleteApps(app.Id);
    }
}
